name: ðŸš€ Release please

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write # to create release commit (google-github-actions/release-please-action)
  pull-requests: write # to create release PR (google-github-actions/release-please-action)

env:
  RELEASE_PLEASE_BRANCH: release-please--branches--main--components--yargs

jobs:
  pre-test-for-release:
    runs-on: ubuntu-latest
    outputs:
      trigger_type: ${{ steps.check-trigger-type.outputs.trigger_type }}
      pr_status: ${{ steps.check-pr.outputs.pr_status }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Determine trigger type
        id: check-trigger-type
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "trigger_type=manual" >> $GITHUB_OUTPUT
          else
            echo "trigger_type=auto" >> $GITHUB_OUTPUT
          fi

      - name: Check for open PR
        id: check-pr
        if: steps.check-trigger-type.outputs.trigger_type == 'auto'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          branch_name=${{ env.RELEASE_PLEASE_BRANCH}}
          repo="repos/${{ github.repository }}/pulls"
          prs=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /$repo)
          if echo "$prs" | jq -e --arg branch_name "$branch_name" '.[] | select(.head.ref == $branch_name)' > /dev/null; then
            echo "Branch exists in pull requests."
            echo "pr_status=true" >> $GITHUB_OUTPUT
          else
            echo "Branch does not exist in pull requests."
            echo "pr_status=false" >> $GITHUB_OUTPUT
          fi

  release-please:
    runs-on: ubuntu-latest
    needs: pre-test-for-release
    if: ${{ needs.pre-test-for-release.outputs.trigger_type == 'manual' || needs.pre-test-for-release.outputs.pr_status == 'true' }}
    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Change working directory
#        run: cd ./release-action
#
#      - uses: pnpm/action-setup@v4
#        name: Install pnpm
#        with:
#          run_install: false
#          package_json_file: './release-action/package.json'
#
#      - name: Setup Node.js
#        uses: actions/setup-node@v2
#        with:
#          node-version: 20
#
#      - name: Install dependencies
#        run: pnpm install --no-frozen-lockfile
#        working-directory: ./release-action
#        shell: bash

      - uses: googleapis/release-please-action@v4
#      - uses: ./release-action
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          prerelease: false



